#version 460 core

layout(local_size_x=8, local_size_y=8)in;

struct Settings {
    int multiplyByTrailValue;
    float trailPow;
};

layout(r32f, binding = 0) uniform image2DArray texTrail;
layout(rgba32f, binding = 1) uniform image2D texRender;
layout(binding = 2, std430)buffer ColorLUT{ vec4 colorLUT[]; };
layout(binding = 3, std430)buffer SpeciesSettings{Settings settings[]; };

#define TRUE 1
#define FALSE 0


uniform int speciesId;
uniform vec3 backgroundColor = vec3(1, 1, 1);

void main() {
    const ivec2 dimensions = imageSize(texRender);

    if (gl_GlobalInvocationID.x >= dimensions.x) {
        return;
    }
    if (gl_GlobalInvocationID.y >= dimensions.y) {
        return;
    }
    const Settings sSettings = settings[speciesId];
    const ivec2 texCoord = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    const float trailValue = imageLoad(texTrail, ivec3(texCoord, 0)).r;

    const vec3 color = colorLUT[uint(pow(trailValue, sSettings.trailPow) * 255)].xyz;

    vec3 resColor = color * (trailValue == 0 ? 0 : 1);
    if (sSettings.multiplyByTrailValue == TRUE) {
        resColor = mix(backgroundColor, resColor, trailValue);
    } else {
        resColor = trailValue == 0 ? backgroundColor : resColor;
    }


    imageStore(texRender, texCoord, vec4(resColor, 1.0));
}